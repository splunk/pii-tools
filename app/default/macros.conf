[grammar_extractor]
definition = eval grammar = " " + lower(replace(_raw,"[^a-zA-Z']"," ")) + " "\
| rex max_match=500 field=grammar "(?:\s|^)(?<contraction_term>[a-zA-Z']+)(?:\s|$)"\
| lookup contractions term as contraction_term \
| eval grammar= mvzip(contraction_term,expanded)\
| eval grammar= mvmap(grammar, if(mvindex(split(grammar,","),1)="-", mvindex(split(grammar,","),0), mvindex(split(grammar,","),1)))\
| eval grammar = " " + mvjoin(grammar," ") + " "\
\
|fields dict_first_name dict_surname dict_pronoun dict_verb dict_preposition dict_noun dict_adverb dict_adjective dict_address *\
| foreach dict_* \
    [  eval grammar = if(isnotnull(<<FIELD>>), replace(grammar, "(?<=\s)" + mvjoin(mvdedup(<<FIELD>>),"(?=\s)|(?<=\s)") + "(?=\s)" , " " + replace("<<FIELD>>", "dict_","") + " ") , grammar) ] \
| eval grammar = replace(grammar, "\s+", " ")
iseval = 0

[word_extractor]
definition = rex field=_raw max_match=400 "(?<term>[a-zA-Z]+)"\
| lookup dictionary term

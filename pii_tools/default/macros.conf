[number_extractor]
definition = rex field=_raw max_match=200 "\D(?<two_digit>[\d]{2})\D"\
| rex field=_raw max_match=200 "\D(?<three_digit>[\d]{3})\D"\
| rex field=_raw max_match=200 "\D(?<four_digit>[\d]{4})\D"\
| rex field=_raw max_match=200 "\D(?<five_digit>[\d]{5})\D"\
| rex field=_raw max_match=200 "\D(?<six_digit>[\d]{6})\D"\
| rex field=_raw max_match=200 "\D(?<seven_digit>[\d]{7})\D"\
| rex field=_raw max_match=200 "\D(?<eight_digit>[\d]{8})\D"\
| rex field=_raw max_match=200 "\D(?<nine_digit>[\d]{9})\D"\
| rex field=_raw max_match=200 "\D(?<ten_digit>[\d]{10})\D"
iseval = 0

[number_format_extractor]
definition = rex field=_raw max_match=200 "\D(?<hyphenated>(?:\d+-)[\d-]+)\D"\
| rex field=_raw max_match=200 "\D(?<underscored>(?:\d+_)[\d_]+)\D"\
| rex field=_raw max_match=200 "\D(?<dotted>(?:\d+\.)[\d\.]+)\D"\
| rex field=_raw max_match=200 "\D(?<spaced>(?:\d+ )[\d ]+)\D"
iseval = 0

[grammar_extractor]
definition = eval grammar = " " + lower(replace(_raw,"[^a-zA-Z']"," ")) + " "\
| rex max_match=500 field=grammar "(?:\s|^)(?<contraction_term>[a-zA-Z']+)(?:\s|$)"\
| lookup contractions term as contraction_term \
| eval grammar= mvzip(contraction_term,expanded)\
| eval grammar= mvmap(grammar, if(mvindex(split(grammar,","),1)="-", mvindex(split(grammar,","),0), mvindex(split(grammar,","),1)))\
| eval grammar = " " + mvjoin(grammar," ") + " "\
\
|fields dict_first_name dict_surname dict_pronoun dict_verb dict_preposition dict_noun dict_adverb dict_adjective dict_address *\
| foreach dict_* \
    [  eval grammar = if(isnotnull(<<FIELD>>), replace(grammar, "(?<=\s)" + mvjoin(mvdedup(<<FIELD>>),"(?=\s)|(?<=\s)") + "(?=\s)" , " " + replace("<<FIELD>>", "dict_","") + " ") , grammar) ] \
| eval grammar = replace(grammar, "\s+", " ")
iseval = 0

[word_extractor]
definition = rex field=_raw max_match=400 "(?<term>[a-zA-Z]+)"\
| lookup dictionary term
